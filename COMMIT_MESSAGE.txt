feat: Add professional Arabic reports and dual frontend modes

Major Updates:
- Add professional HTML report generation with Shaheen branding
- Implement dual frontend: fast direct access & AI-powered routing
- Add comprehensive Arabic/English bilingual support with RTL
- Create one-click startup script (START_APP.bat)
- Add synthetic data generation tool (create_dataset.py)

Frontend Enhancements:
- flask_app_simple.py: Fast direct MCP tool imports (recommended)
- flask_app.py: AI-powered query routing with Ollama integration
- Professional reports with gradients, tables, and action plans
- Full Arabic language support with RTL layout
- Intelligent key findings with data-driven insights

Backend Improvements:
- Add run_server.py: HTTP wrapper for MCP server (uvicorn)
- Streamline requirements.txt: 12 packages â†’ 3 packages
- Optimize MCP tools for Arabic JSON output
- Add dataset caching for faster performance

UI/UX Updates:
- Shaheen branding (green & gold color scheme)
- Document metadata and report numbering
- Executive summary with key metrics cards
- Multi-phase action plans (immediate/short-term/long-term)
- Professional footer with compliance information

Documentation:
- Enhanced README with setup instructions and examples
- Add .env.example for environment configuration
- Add CHANGELOG.md for version tracking
- Update architecture diagram with new files

Technical Details:
- 8,640 sensor readings (30 days, 5-minute intervals)
- 3 MCP tools: energy stats, sustainability metrics, eco impact
- 7,400+ character professional reports
- Response time: <1 second

Files Changed:
- Modified: .gitignore, README.md, backend/mcp_server.py,
  backend/requirements.txt, frontend/flask_app.py,
  frontend/requirements.txt, frontend/templates/chat.html
- Added: START_APP.bat, backend/run_server.py, create_dataset.py,
  frontend/flask_app_simple.py, .env.example, CHANGELOG.md

Breaking Changes: None (backward compatible)

